# Logs
logs
*.log
.DS_Store

# Secrets
githubToken.js

# Dependency directory
# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git
node_modules


//  Configure a view object, to hold all our functions for dynamic updates and article-related event handlers.

// articleView.populateFilters = function() {
//   $('article').not('.template').each(function() {
//     var authorName, category, optionTag;
//     authorName = $(this).find('address a').text();
//     optionTag = '<option value="' + authorName + '">' + authorName + '</option>';
//     $('#author-filter').append(optionTag);
//     category = $(this).attr('data-category');
//     optionTag = '<option value="' + category + '">' + category + '</option>';
//     if ($('#category-filter option[value="' + category + '"]').length === 0) {
//       $('#category-filter').append(optionTag);
//     }
//   });
// };
// articleView.handleAuthorFilter = function() {
//   $('#author-filter').on('change', function() {
//     if ($(this).val()) {
//       /* TODO: If the select box changes to an option that has a value, we should:
//           1. Hide all of the articles
//           2. Fade in only the articles that match based on on the author
//             that was aselected. Hint: use an attribute selector to find
//             those articles that match the value, and then fade them in.
//         */
//       $('article').hide();
//       // $('article').attr('author-data').val($(this).val()).fadeIn();
//       var $turtle = $('article[data-author="' + $(this).val() + '"]').fadeIn();
//       console.log('does this work?', $turtle);
//     } else {
//     /* Otherwise, we should:
//         1. Show all the articles except the template */


//     }
//     $('#category-filter').val('');
//   });
// };
// articleView.handleMainNav = function () {
//   $('.main-nav').on('click', '.tab', function() {
//     /* done TODO:
//       1. Hide all of the .tab-content sections
      
//       2. Fade in the single .tab-content section that is
//         associated with the .tab element's data-content attribute.
//     */
//     var $dataGrab = $(this).attr('data-content');
//     console.log($dataGrab);

//     $('section[class=tab-content]').hide();
//     var $tryAgain = $('section[id=' + $dataGrab + ']');
//     console.log($tryAgain);
//     $tryAgain.fadeIn();



//   });
//   $('.main-nav .tab:first').click();
// };
// articleView.populateFilters();
// articleView.handleAuthorFilter();
// articleView.handleMainNav();